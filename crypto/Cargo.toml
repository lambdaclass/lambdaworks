[package]
name = "lambdaworks-crypto"
description = "Data structures and primitives for cryptography library"
version.workspace = true
edition.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
lambdaworks-math = { workspace = true, features = ["alloc"] }
sha3 = { version = "0.10", default-features = false }
sha2 = { version = "0.10", default-features = false }
# Optional
serde = { version = "1.0", default-features = false, features = [
    "derive",
    "alloc",
], optional = true }
rayon = { version = "1.8.0", optional = true }
rand = { version = "0.8.5", default-features = false }
rand_chacha = { version = "0.3.1", default-features = false }

[dev-dependencies]
criterion = "0.4"
iai-callgrind.workspace = true
rand = "0.8.5"
rand_chacha = "0.3.1"

[features]
default = ["asm", "std"]
asm = ["sha3/asm"]
std = ["lambdaworks-math/std", "sha2/std", "sha3/std", "serde?/std"]
serde = ["dep:serde"]
test_fiat_shamir = []
parallel = ["dep:rayon"]
alloc = []

[[bench]]
name = "criterion_merkle"
harness = false

[[bench]]
name = "iai_merkle"
harness = false

[[bench]]
name = "criterion_poseidon"
harness = false

[[bench]]
name = "criterion_pedersen"
harness = false
